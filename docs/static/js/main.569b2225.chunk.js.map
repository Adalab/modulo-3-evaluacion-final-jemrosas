{"version":3,"sources":["images/Rick_and_Morty_Logo.png","images/vortex.png","images/clipart.png","images/meeseeks.png","components/SearchBar.js","components/Loading.js","components/CharacterCard.js","components/Warning.js","components/CharacterList.js","services/receiveApiData.js","components/CharacterDetail.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","SearchBar","props","className","action","htmlFor","type","name","id","placeholder","onChange","ev","handleSearch","value","target","toUpperCase","onKeyPress","key","preventDefault","autoComplete","Loading","loading","src","loadVortex","alt","CharacterCard","to","characterInfo","replace","image","specie","planet","protoTypes","PropTypes","number","string","Warning","CharacterList","charactersList","charactersInfo","map","card","length","receiveApiData","fetch","then","response","json","data","results","character","species","location","status","episodes","episode","CharacterDetail","undefined","array","App","useState","setData","searchFilter","setSearchFilter","setLoading","useEffect","filterCharacters","filter","includes","sort","characterA","characterB","logo","path","render","routerProps","clickedCharacter","parseInt","match","params","foundCharacter","find","Boolean","window","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.569b2225.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Rick_and_Morty_Logo.75509f2e.png\";","module.exports = __webpack_public_path__ + \"static/media/vortex.b7e06ede.png\";","module.exports = __webpack_public_path__ + \"static/media/clipart.bb65bdad.png\";","module.exports = __webpack_public_path__ + \"static/media/meeseeks.cf6f72da.png\";","import React from 'react';\r\nimport '../stylesheets/SearchBar.scss';\r\n\r\nconst SearchBar = (props) => {\r\n  const handleChange = (ev) => {\r\n    props.handleSearch({\r\n      value: ev.target.value.toUpperCase(),\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (ev) => {\r\n    if (ev.key === 'Enter') {\r\n      ev.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className='form' action=''>\r\n      <label className='form__label' htmlFor='searchField'>\r\n        <input className='form__input' type='text' name='searchField' id='searchField' placeholder='Insert character name' onChange={handleChange} onKeyPress={handleSubmit} autoComplete='off'></input>\r\n      </label>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\nimport '../stylesheets/Loading.scss';\r\nimport loadVortex from '../images/vortex.png';\r\n\r\nconst Loading = (props) => {\r\n  if (props.loading) {\r\n    return (\r\n      <div className='loading'>\r\n        <img src={loadVortex} alt='Spinning vortex' />\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../stylesheets/CharacterCard.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst CharacterCard = (props) => {\r\n  return (\r\n    <Link className='link' to={`/character/${props.characterInfo.id}`} replace>\r\n      <li className='card'>\r\n        <div className='card__container-img'>\r\n          <img className='card__img' src={props.characterInfo.image} alt={`${props.characterInfo.name}'s portrait`} />\r\n        </div>\r\n        <div className='card__text'>\r\n          <h3 className='card__text-title'>{props.characterInfo.name}</h3>\r\n          <p className='card__text-paragraph'>{props.characterInfo.specie}</p>\r\n          <p className='card__text-paragraph'>{props.characterInfo.planet}</p>\r\n        </div>\r\n      </li>\r\n    </Link>\r\n  );\r\n};\r\nexport default CharacterCard;\r\n\r\nCharacterCard.protoTypes = {\r\n  id: PropTypes.number,\r\n  name: PropTypes.string,\r\n  specie: PropTypes.string,\r\n  planet: PropTypes.string,\r\n};\r\n","import React from 'react';\r\nimport '../stylesheets/Warning.scss';\r\nimport image from '../images/clipart.png';\r\n\r\nconst Warning = () => {\r\n  return (\r\n    <li className='warning'>\r\n      <p className='warning__text'>Ooopsie!! Looks like something went wrong, please try another search.</p>\r\n      <img className='warning__image' src={image} alt='Something went wrong' />\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Warning;\r\n","import React from 'react';\r\nimport '../stylesheets/CharacterList.scss';\r\nimport CharacterCard from './CharacterCard';\r\nimport Warning from './Warning';\r\n\r\nconst CharacterList = (props) => {\r\n  const charactersList = props.charactersInfo.map((card) => {\r\n    return <CharacterCard className='characterCard' key={card.id} characterInfo={card} />;\r\n  });\r\n\r\n  if (charactersList.length === 0 && props.loading === false) {\r\n    return <Warning />;\r\n  }\r\n\r\n  return <ul className='charactersList'>{charactersList}</ul>;\r\n};\r\n\r\nexport default CharacterList;\r\n","// En la pantalla de detalle aparecerá además de la foto, nombre y especie, el planeta de origen, el número de episodios en los que aparece y si está vivo o muerto\r\n\r\nconst receiveApiData = () => {\r\n  return fetch('//rickandmortyapi.com/api/character/')\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data.results.map((character) => {\r\n        return {\r\n          id: character.id,\r\n          image: character.image,\r\n          name: character.name,\r\n          specie: character.species,\r\n          planet: character.location.name,\r\n          status: character.status,\r\n          episodes: character.episode,\r\n        };\r\n      });\r\n    });\r\n};\r\n\r\nexport default receiveApiData;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../stylesheets/CharacterDetail.scss';\r\nimport { Link } from 'react-router-dom';\r\nimport image from '../images/meeseeks.png';\r\n\r\nconst CharacterDetail = (props) => {\r\n  if (props.characterInfo === undefined) {\r\n    return (\r\n      <div className='modal'>\r\n        <div className='modal__dialog'>\r\n          <div className='modal__dialog'>\r\n            <div className='modal__content'>\r\n              <header className='modal__header'>\r\n                <Link to='/'>\r\n                  <span className='modal__close icon fas fa-undo'></span>\r\n                </Link>\r\n              </header>\r\n              <div className='modal__text-error'>\r\n                <p>Error: character not found</p>\r\n              </div>\r\n              <div className='modal__img'>\r\n                <img className='modal__img-error' src={image} alt={'Meeseeks worrying face'} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className='modal'>\r\n        <div className='modal__dialog'>\r\n          <div className='modal__dialog'>\r\n            <div className='modal__content'>\r\n              <header className='modal__header'>\r\n                <Link to='/'>\r\n                  <span className='modal__close icon fas fa-undo'></span>\r\n                </Link>\r\n              </header>\r\n              <div className='modal__img'>\r\n                <img className='modal__img-src' src={props.characterInfo.image} alt={`${props.characterInfo.name}'s portrait`} />\r\n              </div>\r\n              <div className='modal__text'>\r\n                <h2>{props.characterInfo.name}</h2>\r\n                <p>\r\n                  <span className='modal__text--property'>Status: </span>\r\n                  <span>{props.characterInfo.status}</span>\r\n                </p>\r\n                <p>\r\n                  <span className='modal__text--property'>Species: </span>\r\n                  <span>{props.characterInfo.specie}</span>\r\n                </p>\r\n                <p>\r\n                  <span className='modal__text--property'>Origin: </span>\r\n                  <span>{props.characterInfo.planet}</span>\r\n                </p>\r\n                <p>\r\n                  <span className='modal__text--property'>Episodes: </span>\r\n                  <span>{props.characterInfo.episodes.length}</span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\nexport default CharacterDetail;\r\n\r\nCharacterDetail.protoTypes = {\r\n  id: PropTypes.number,\r\n  name: PropTypes.string,\r\n  specie: PropTypes.string,\r\n  planet: PropTypes.string,\r\n  episodes: PropTypes.array,\r\n};\r\n","import React, { useState, useEffect } from 'react';\nimport '../stylesheets/App.scss';\nimport { Route, Switch } from 'react-router-dom';\nimport logo from '../images/Rick_and_Morty_Logo.png';\nimport SearchBar from './SearchBar';\nimport Loading from './Loading';\nimport CharacterList from './CharacterList';\nimport receiveApiData from '../services/receiveApiData';\nimport CharacterDetail from './CharacterDetail';\n\nconst App = () => {\n  const [data, setData] = useState([]);\n  const [searchFilter, setSearchFilter] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    receiveApiData()\n      .then((data) => setData(data))\n      .then(() => setLoading(false));\n  }, []);\n\n  const handleSearch = (data) => {\n    setSearchFilter(data.value);\n  };\n\n  const filterCharacters = data\n\n    .filter((character) => character.name.toUpperCase().includes(searchFilter))\n\n    .sort((characterA, characterB) => (characterA.name > characterB.name ? 1 : -1));\n\n  const renderCharacterDetail = (routerProps) => {\n    const clickedCharacter = parseInt(routerProps.match.params.id);\n    const foundCharacter = data.find((character) => {\n      return character.id === clickedCharacter;\n    });\n    return <CharacterDetail characterInfo={foundCharacter} />;\n  };\n\n  return (\n    <div className='app'>\n      <header className='app__header'>\n        <div>\n          <img className='app__header-logo' src={logo} alt='Rick and Morty logo' />\n        </div>\n        <nav>\n          <SearchBar handleSearch={handleSearch} />\n        </nav>\n      </header>\n      <main className='app__main'>\n        <Loading loading={loading} />\n        <CharacterList charactersInfo={filterCharacters} loading={loading} />\n        <Switch>\n          <Route path='/character/:id' render={renderCharacterDetail} />\n        </Switch>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.scss';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}